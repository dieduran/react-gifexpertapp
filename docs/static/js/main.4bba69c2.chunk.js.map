{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","categorie","i","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cAAmB,EACTC,mBAAS,IADA,mBACtCC,EADsC,KAC1BC,EAD0B,KAe7C,OACI,mCACI,sBAAMC,SAVO,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAO,GACzBR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAmBO,OAExCN,EAAc,KAIV,SACA,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAlBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,e,+BCTlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACM,EACnBC,EAFa,qDACM,EADN,cAE2DC,UAAUH,GAFrE,sDAGDI,MAAMF,GAHL,cAGbG,EAHa,gBAICA,EAAKC,OAJN,uBAIZC,EAJY,EAIZA,KAEDC,EAAMD,EAAKE,KAAK,SAAAC,GAClB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAgBZM,GAhBY,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEhC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECHZ,SAACA,GAAa,IAAD,EAEXd,mBAAS,CAC9BqB,KAAM,GACNa,SAAS,IAJuB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAgBpC,OATAC,qBAAU,WACLxB,EAAQC,GACHwB,MAAK,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IACGqB,EDZsBK,CAAa1B,GAA9Ba,EADuB,EAC5BN,KAAaa,EADe,EACfA,QAEpB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAFhB,KAGI,qBAAKA,UAAU,aAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEZxBgB,EAAe,WAAM,MAGMzC,mBAAS,CAAC,cAHhB,mBAGvB0C,EAHuB,KAGX3C,EAHW,KAa9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEI2C,EAAWnB,KAAI,SAACoB,EAAUC,GACtB,OAAO,cAAC,EAAD,CAEK9B,SAAU6B,GADJA,Y,MClBtCE,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.4bba69c2.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ( {setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n        //console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e)=> {\r\n        e.preventDefault();\r\n        //console.log('Submit hecho');\r\n        if (inputValue.trim().length>2){\r\n            setCategories(cat => [inputValue,...cat]); //ahora insertamos primero la nueva\r\n        }\r\n        setInputValue('');\r\n    }\r\n    return (\r\n        <>  \r\n            <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value= {inputValue}\r\n                onChange={ handleInputChange}\r\n            />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired    //requerimos la funcion en forma obligatoria\r\n}","export const getGifs = async(category) =>{\r\n    const cantidadImagenes = 2;\r\n    const url=`https://api.giphy.com/v1/gifs/search?limit=${cantidadImagenes}&q=${encodeURI(category)}&api_key=fLAR9jE8d8fSgB6niL5PNnZOO5oMUUHA`;\r\n    const resp= await fetch(url);\r\n    const {data}= await resp.json();\r\n\r\n    const gifs= data.map( img => {\r\n        return{\r\n            id:img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    // console.log(gifs);\r\n    // setImages(gifs);\r\n    return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    //console.log(id);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n","//import React, {useState, useEffect} from 'react'\r\nimport React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    const {data:images, loading}=useFetchGifs(category);\r\n    //para renombrar data como images\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n            {loading && <p className='animate__animated animate__flash'>Loading...</p>}  {/* && en lugar de ? para  no usarlo por el else */}\r\n            <div className='card-grid ' >\r\n                {\r\n                    images.map(img=> (\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img}    //otra forma de pasar todo// img={res} \r\n                        />\r\n                    ))\r\n                } \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport {getGifs} from '../helpers/GetGifs';\r\nexport const useFetchGifs= (category) =>{\r\n    \r\n   const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n         getGifs(category)\r\n             .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n    }, [category])\r\n    return state;  // {data:[], loading:true }\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories= [' One Punch','Samurai X', 'Dragon Ball']\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    // const handleAdd=()=>{\r\n    //     setCategories([...categories,'HunterXHunter'])   //lo agrego a lo anterior  \r\n    //     //si lo quisiera primero ['HunterXHunter',...categories]\r\n    //     //otra forma:\r\n    //     //setCategories( cats => [...cats,'HunterXHunter']) //otra forma\r\n    // }\r\n       //<button onClick={handleAdd} >Agregar</button>\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories= {setCategories}/>\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                categories.map((categorie,i)=>{  // i es el indice \r\n                    return <GifGrid \r\n                                key ={categorie}\r\n                                category={categorie}/>               //<li key={categorie}> {categorie} </li>\r\n                })\r\n                }\r\n            </ol>  \r\n        </>\r\n    )\r\n}\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {GifExpertApp} from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}